{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itama\\\\Desktop\\\\\\u05D0\\u05D9\\u05EA\\u05DE\\u05E8\\\\finalProject\\\\src\\\\components\\\\CardListPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createNewCard, updateCard, deleteCard } from \"./service/apiCard\";\nimport { getCard } from \"./service/apiCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardListPage() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let userData = JSON.parse(localStorage.getItem(\"UserData\"));\n    setUsers(userData);\n  }, []);\n  const fetchCards = async () => {\n    try {\n      const response = await getCard();\n      console.log(\"Card data:\", response.data);\n      setCards(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cards:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mb-3 mt-3 m-5\",\n      onClick: () => navigate(\"/AddCard\", {\n        createNewCard\n      }),\n      children: \"Add Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      xl: 4,\n      className: \"row\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Col, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          border: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Business card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: card.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: card.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: card.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: card.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: card.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: card.image.url,\n              style: {\n                marginBottom: \"10px\",\n                marginLeft: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => {\n                    console.log('Card:', card);\n                    if (card && card._id) {\n                      deleteCard(card._id);\n                      fetchCards();\n                    } else {\n                      console.error('Invalid card object or card ID');\n                    }\n                  },\n                  children: \"delete card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 18\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => navigate(`/UpdateCard/:id${card._id}`, {\n                    updateCard\n                  }),\n                  children: \"update card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(CardListPage, \"CVSWnU6fMVLKUO3SZYKvPUHsrE0=\", false, function () {\n  return [useNavigate];\n});\n_c = CardListPage;\nexport default CardListPage;\nvar _c;\n$RefreshReg$(_c, \"CardListPage\");","map":{"version":3,"names":["useEffect","useState","Card","Button","Row","Col","useNavigate","createNewCard","updateCard","deleteCard","getCard","axios","jsxDEV","_jsxDEV","CardListPage","_s","users","setUsers","cards","setCards","navigate","userData","JSON","parse","localStorage","getItem","fetchCards","response","console","log","data","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","lg","xl","map","card","index","border","Header","Body","Title","title","Subtitle","subtitle","Text","description","phone","email","Img","variant","src","image","url","style","marginBottom","marginLeft","size","_id","_c","$RefreshReg$"],"sources":["C:/Users/itama/Desktop/איתמר/finalProject/src/components/CardListPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Card, Button, Row, Col} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { createNewCard, updateCard, deleteCard } from \"./service/apiCard\";\nimport { getCard } from \"./service/apiCard\";\nimport axios from \"axios\";\n\nfunction CardListPage() {\n  const [users, setUsers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let userData = JSON.parse(localStorage.getItem(\"UserData\"));\n    setUsers(userData);\n  }, []);\n\n  const fetchCards = async () => {\n    try {\n      const response = await getCard();\n      console.log(\"Card data:\", response.data);\n      setCards(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cards:\", error);\n    }\n  };\n \n\n  return (\n    <div className=\"container\">\n      <button\n        className=\"btn btn-primary mb-3 mt-3 m-5\"\n        onClick={() => navigate(\"/AddCard\", { createNewCard })}\n      >\n        Add Card\n      </button>\n\n      <Row xs={1} md={2} lg={3} xl={4} className=\"row\">\n        {cards.map((card, index) => (\n          <Col key={index} className=\"mb-4\">\n            <Card border=\"primary\">\n            <Card.Header>Business card</Card.Header>\n              <Card.Body>\n                <Card.Title>{card.title}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  {card.subtitle}\n                </Card.Subtitle>\n          \n                <Card.Text>{card.description}</Card.Text>\n                <Card.Text>{card.phone}</Card.Text>\n                <Card.Text>{card.email}</Card.Text>\n                <Card.Img  \n                  variant=\"top\"\n                  src={card.image.url}\n                  style={{ marginBottom: \"10px\", marginLeft: \"10px\" }}\n                />\n                <Row>\n                 <Col>\n                 <Button variant=\"danger\" size=\"sm\" onClick={() => {\n                  console.log('Card:', card);\n                 if (card && card._id) {\n                  deleteCard(card._id);\n                  fetchCards();\n                } else {\n                  console.error('Invalid card object or card ID');\n                }\n                 }}\n                 >\n                  delete card\n                  </Button>\n                 </Col>\n                 <Col>\n                  <Button variant=\"primary\" size=\"sm\" onClick={() => navigate(`/UpdateCard/:id${card._id}`, { updateCard })}>update card</Button>\n                 </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n            </Col>\n            ))}\n          </Row>\n      </div>\n  );\n}\nexport default CardListPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}