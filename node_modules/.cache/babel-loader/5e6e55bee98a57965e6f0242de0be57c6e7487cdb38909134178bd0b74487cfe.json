{"ast":null,"code":"import axios from \"axios\";\nimport { BaseAPI } from \"../constants\";\nconst api = axios.create({\n  baseURL: BaseAPI\n});\nexport const getCard = async () => {\n  try {\n    const response = await api.get(`/cards/my-cards`, {\n      title: card.title,\n      subtitle: card.subtitle,\n      description: card.description,\n      phone: card.phone,\n      email: card.email,\n      web: card.web,\n      image: {\n        url: card.url,\n        alt: card.alt\n      },\n      address: {\n        state: card.state,\n        country: card.country,\n        city: card.city,\n        street: card.street,\n        houseNumber: +card.houseNumber,\n        zip: +card.zip\n      }\n    }, {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error posting item:\", error);\n    throw error;\n  }\n};\nexport const updateCard = async (token, card, id) => {\n  console.log(card, id);\n  try {\n    // const text = await axios.get( `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${id}`)\n\n    const response = await axios.put(`https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${id}`, {\n      title: card.title,\n      subtitle: card.subtitle,\n      description: card.description,\n      phone: card.phone,\n      email: card.email,\n      web: card.web,\n      image: {\n        url: card.url,\n        alt: card.alt\n      },\n      address: {\n        state: card.state,\n        country: card.country,\n        city: card.city,\n        street: card.street,\n        houseNumber: +card.houseNumber,\n        zip: +card.zip\n      }\n    }, {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating item:\", error);\n    throw error;\n  }\n};\nexport const deleteCard = async cardId => {\n  try {\n    const response = await axios.delete(`https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`, {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting item:\", error);\n    throw error;\n  }\n};\nexport const createNewCard = async (token, card) => {\n  console.log(\"text\", card);\n  try {\n    const response = await api.post(`/cards`, {\n      title: card.title,\n      subtitle: card.subtitle,\n      description: card.description,\n      phone: card.phone,\n      email: card.email,\n      web: card.web,\n      image: {\n        url: card.url,\n        alt: card.alt\n      },\n      address: {\n        state: card.state,\n        country: card.country,\n        city: card.city,\n        street: card.street,\n        houseNumber: +card.houseNumber,\n        zip: +card.zip\n      }\n    }, {\n      headers: {\n        \"x-auth-token\": token\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error posting item:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BaseAPI","api","create","baseURL","getCard","response","get","title","card","subtitle","description","phone","email","web","image","url","alt","address","state","country","city","street","houseNumber","zip","headers","localStorage","getItem","error","console","updateCard","token","id","log","put","data","deleteCard","cardId","delete","createNewCard","post"],"sources":["C:/Users/itama/Desktop/איתמר/finalProject/src/components/service/apiCard.js"],"sourcesContent":["import axios from \"axios\";\nimport { BaseAPI } from \"../constants\";\n\nconst api = axios.create({\n  baseURL: BaseAPI,\n});\nexport const getCard = async () => {\n  try {\n    const response = await api.get(`/cards/my-cards`,\n      {\n        title: card.title,\n        subtitle: card.subtitle,\n        description: card.description,\n        phone: card.phone,\n        email: card.email,\n        web: card.web,\n        image: {\n          url: card.url,\n          alt: card.alt,\n        },\n        address: {\n          state: card.state,\n          country: card.country,\n          city: card.city,\n          street: card.street,\n          houseNumber: +card.houseNumber,\n          zip: +card.zip,\n        },\n      }, {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error posting item:\", error);\n    throw error;\n  }\n};\nexport const updateCard = async (token, card, id) => {\n  console.log(card, id);\n  try { \n    // const text = await axios.get( `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${id}`)\n\n    const response = await axios.put(\n      `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${id}`,\n      {\n        title: card.title,\n        subtitle: card.subtitle,\n        description: card.description,\n        phone: card.phone,\n        email: card.email,\n        web: card.web,\n        image: {\n          url: card.url,\n          alt: card.alt,\n        },\n        address: {\n          state: card.state,\n          country: card.country,\n          city: card.city,\n          street: card.street,\n          houseNumber: +card.houseNumber,\n          zip: +card.zip,\n        },\n      },\n      {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating item:\", error);\n    throw error;\n  }\n};\n\nexport const deleteCard = async (cardId) => {\n  try {\n    const response = await axios.delete(`https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`, {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting item:\", error);\n    throw error;\n  }\n};\n\nexport const createNewCard = async (token, card) => {\n  console.log(\"text\", card);\n  try {\n    const response = await api.post(\n      `/cards`,\n      {\n        title: card.title,\n        subtitle: card.subtitle,\n        description: card.description,\n        phone: card.phone,\n        email: card.email,\n        web: card.web,\n        image: {\n          url: card.url,\n          alt: card.alt,\n        },\n        address: {\n          state: card.state,\n          country: card.country,\n          city: card.city,\n          street: card.street,\n          houseNumber: +card.houseNumber,\n          zip: +card.zip,\n        },\n      },\n      {\n        headers: {\n          \"x-auth-token\": token,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(\"Error posting item:\", error);\n    throw error;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}